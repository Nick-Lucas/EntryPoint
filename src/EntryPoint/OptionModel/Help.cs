using EntryPoint.Parsing;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace EntryPoint.OptionModel {
    internal static class Help {
        public static void HandleHelpRequest(Model model) {
            var help = Generate(model);
            Console.WriteLine(help);
            Console.WriteLine("\nPress Enter to exit...");
            Console.ReadLine();
            Environment.Exit(0);
        }

        // Given a Model, generates a string which can be printed to the CLI 
        // based on information provided by the ApplicationModel
        public static string Generate(Model model) {
            StringBuilder builder = new StringBuilder();
            
            if (model.ApplicationOptions.UtilityName.Length > 0) {
                builder.AppendLine(model.ApplicationOptions.UtilityName);
                builder.AppendLine();
            }
            if (model.Help.Detail.Length > 0) {
                builder.AppendLine(model.Help.Detail);
                builder.AppendLine();
            }
            
            foreach (var option in model) {
                builder.AppendLine($"   -{option.Definition.SingleDashChar} --{option.Definition.DoubleDashName}");
                builder.AppendLine($"   {option.Help.Detail}");
                builder.AppendLine();
            }
            builder.AppendLine("Generated by EntryPoint");

            return builder.ToString();
        }

        // Determines if a Token is the -h / --help option
        public static bool IsHelpOption(Token token) {
            return token.IsOption && 
                  (token.Value.Equals(EntryPointApi.DASH_DOUBLE + "help", StringComparison.CurrentCultureIgnoreCase)
                || token.Value.Equals(EntryPointApi.DASH_SINGLE + "h", StringComparison.CurrentCulture));
        }
    }

}
